//github//YashwanthChennu

Problem Statement: https://www.hackerrank.com/challenges/s10-quartiles/problem

Solution:
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>
#include <malloc.h>
#include <math.h>
float quartile(float* , int, int);
float quartile(float *array,int start, int end ){
    
   int count = 0, i, sum;
    for(i = start; i <= end; i++)
        count++;
    
    if(count % 2 != 0)
        return *(array + start + count/2);
    else
        return (*(array + start+ count/2) + *(array + start + count/2 - 1))/2 ;
    
    
   
   
}
    
int main() {

     float q1, q2, *array,q3, temp;
     int i , j, num;
     scanf("%d", &num);

     array = (float*) malloc(num * sizeof(float));
     for(i = 0; i < num;i++)
         scanf("%f", array + i);
    for(i =0; i < num- 1; i++)
        for(j = 0; j < num-1; j++){
            if(*(array + j) > *(array + j + 1)){
                temp = *(array + j);
                *(array + j) = *(array + 1+ j);
                *(array + j + 1) = temp;
            }

        }
   
    q1 = quartile(array, 0, (num/2)-1);
    if(num %2 != 0){
         q2 = *(array + (int)(num/2));
         q3 = quartile(array, num/2+1, num -1 );
    }
    else {

        q2 = (*(array + (int)(num/2)) + *(array + ((int)(num/2) - 1)))/2;
        q3 = quartile(array, num/2, num -1 );
    }
    
    
    printf("%.f\n%.f\n%.f", q1, q2, q3);

    return 0;
}
